// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Restaurant {
  id            String           @id @default(cuid())
  name          String?
  email         String           @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  categories    FoodCategories[]
}

model Account {
  restaurantId      String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String     @unique
  restaurantId String
  expires      DateTime
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model FoodCategories {
  id           String   @id @default(cuid())
  restaurantId String
  name         String?
  image        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  dishes     Dishes[]
}

model Dishes {
  id          String   @id @default(cuid())
  categoryId  String
  name        String?
  image       String?
  description String?
  price       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  FoodCategories FoodCategories @relation(fields: [categoryId], references: [id])
}
